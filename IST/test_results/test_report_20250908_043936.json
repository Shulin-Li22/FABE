[
  {
    "language": "c",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.c",
    "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
    "timestamp": "2025-09-08T04:39:36.070424",
    "total_tests": 65,
    "successful_tests": 26,
    "failed_tests": 39,
    "successful_styles": [
      "-3.1",
      "0.0",
      "0.4",
      "0.5",
      "0.6",
      "1.2",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.1",
      "5.2",
      "6.2",
      "7.2",
      "8.1",
      "9.1",
      "9.2",
      "14.2",
      "16.1",
      "17.2"
    ],
    "failed_styles": [
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.1",
      "-1.2",
      "-1.3",
      "0.1",
      "0.2",
      "0.3",
      "1.1",
      "6.1",
      "7.1",
      "8.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.3",
      "11.4",
      "12.1",
      "12.2",
      "12.3",
      "12.4",
      "13.1",
      "13.2",
      "14.1",
      "15.1",
      "15.2",
      "16.2",
      "17.1",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j_sh = 0;\n    while(j_sh < 3) {\n        b--;\n        j_sh++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_re​cursive(int ​n) {\n    if (​n == 0) {\n        return 1;\n    }\n    return ​n * factorial_recursiv​e(​n - 1);\n}\n\n// For style 17: nested if\nvoid check_nes​ted(int ​a, int ​b) {\n    if (​a > 0 && ​b > 0) {\n        p​rintf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid prin​t_day(int da​y) {\n    if (d​ay == 1) {\n        prin​tf(\"Monday\\n\");\n    } else if (d​ay == 2) {\n        pr​intf(\"Tuesday\\n\");\n    } else {\n        print​f(\"Other day\\n\");\n    }\n}\n\nint ​main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ​a;\n    ​a = 5;\n    int ​b = 10;\n    int my_va​r = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ​a = ​a + 1;\n    ​b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ​i = 0; ​i < 5; ​i++) {\n        ​a++; // For style 4: for update\n    }\n\n    int ​j = 0;\n    while(​j < 3) {\n        ​b--;\n        ​j++;\n    }\n\n    // For style 19: ternary\n    int ma​x_val = (​a > ​b) ? ​a : ​b;\n\n    // For style 14: if exclamation\n    if (!(​a == ​b)) {\n        print​f(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_ar​ray[5];\n    for(int ​i=0; ​i<5; ​i++) {\n        static_arr​ay[​i] = ​i;\n    }\n\n    int* d​ynamic_array = (int*)m​alloc(5 * sizeof(int));\n    if (dynamic​_array != NULL) {\n        *(​dynamic_array + 0) = 100;\n        f​ree(dynamic_arr​ay);\n    }\n\n    // For style 13: break/goto\n    for(int ​k=0; ​k<10; ​k++) {\n        if (​k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_v​ar = ​a + ​b;\n    print​f(\"Result: %d\\n\", te​mp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint fact‌orial_recursive(int ‌n) {\n    if (‌n == 0) {\n        return 1;\n    }\n    return ‌n * factoria‌l_recursive(‌n - 1);\n}\n\n// For style 17: nested if\nvoid ch‌eck_nested(int ‌a, int ‌b) {\n    if (‌a > 0 && ‌b > 0) {\n        print‌f(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid ‌print_day(int d‌ay) {\n    if (‌day == 1) {\n        pri‌ntf(\"Monday\\n\");\n    } else if (‌day == 2) {\n        prin‌tf(\"Tuesday\\n\");\n    } else {\n        ‌printf(\"Other day\\n\");\n    }\n}\n\nint ma‌in() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ‌a;\n    ‌a = 5;\n    int ‌b = 10;\n    int ‌my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ‌a = ‌a + 1;\n    ‌b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ‌i = 0; ‌i < 5; ‌i++) {\n        ‌a++; // For style 4: for update\n    }\n\n    int ‌j = 0;\n    while(‌j < 3) {\n        ‌b--;\n        ‌j++;\n    }\n\n    // For style 19: ternary\n    int max‌_val = (‌a > ‌b) ? ‌a : ‌b;\n\n    // For style 14: if exclamation\n    if (!(‌a == ‌b)) {\n        pri‌ntf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int sta‌tic_array[5];\n    for(int ‌i=0; ‌i<5; ‌i++) {\n        stat‌ic_array[‌i] = ‌i;\n    }\n\n    int* dynamic_arr‌ay = (int*)‌malloc(5 * sizeof(int));\n    if (d‌ynamic_array != NULL) {\n        *(dynamic_‌array + 0) = 100;\n        f‌ree(dynamic_ar‌ray);\n    }\n\n    // For style 13: break/goto\n    for(int ‌k=0; ‌k<10; ‌k++) {\n        if (‌k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_va‌r = ‌a + ‌b;\n    pri‌ntf(\"Result: %d\\n\", temp_v‌ar);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recur‭sive(int ‭n) {\n    if (‭n == 0) {\n        return 1;\n    }\n    return ‭n * factorial_recur‭sive(‭n - 1);\n}\n\n// For style 17: nested if\nvoid ch‭eck_nested(int ‭a, int ‭b) {\n    if (‭a > 0 && ‭b > 0) {\n        print‭f(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid pr‭int_day(int d‭ay) {\n    if (da‭y == 1) {\n        ‭printf(\"Monday\\n\");\n    } else if (d‭ay == 2) {\n        pri‭ntf(\"Tuesday\\n\");\n    } else {\n        p‭rintf(\"Other day\\n\");\n    }\n}\n\nint ma‭in() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ‭a;\n    ‭a = 5;\n    int ‭b = 10;\n    int my_v‭ar = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ‭a = ‭a + 1;\n    ‭b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ‭i = 0; ‭i < 5; ‭i++) {\n        ‭a++; // For style 4: for update\n    }\n\n    int ‭j = 0;\n    while(‭j < 3) {\n        ‭b--;\n        ‭j++;\n    }\n\n    // For style 19: ternary\n    int ‭max_val = (‭a > ‭b) ? ‭a : ‭b;\n\n    // For style 14: if exclamation\n    if (!(‭a == ‭b)) {\n        p‭rintf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int sta‭tic_array[5];\n    for(int ‭i=0; ‭i<5; ‭i++) {\n        sta‭tic_array[‭i] = ‭i;\n    }\n\n    int* dynam‭ic_array = (int*)mallo‭c(5 * sizeof(int));\n    if (‭dynamic_array != NULL) {\n        *(‭dynamic_array + 0) = 100;\n        fre‭e(dynamic_ar‭ray);\n    }\n\n    // For style 13: break/goto\n    for(int ‭k=0; ‭k<10; ‭k++) {\n        if (‭k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_‭var = ‭a + ‭b;\n    prin‭tf(\"Result: %d\\n\", temp_va‭r);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_rec‭ursive(int ‭n) {\n    if (‭n == 0) {\n        return 1;\n    }\n    return ‭n * factoria‭l_recursive(‭n - 1);\n}\n\n// For style 17: nested if\nvoid che‭ck_nested(int ‭a, int ‭b) {\n    if (‭a > 0 && ‭b > 0) {\n        print‭f(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid pr‭int_day(int d‭ay) {\n    if (da‭y == 1) {\n        prin‭tf(\"Monday\\n\");\n    } else if (d‭ay == 2) {\n        pri‭ntf(\"Tuesday\\n\");\n    } else {\n        ‭printf(\"Other day\\n\");\n    }\n}\n\nint mai‭n() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ‭a;\n    ‭a = 5;\n    int ‭b = 10;\n    int my_‭var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ‭a = ‭a + 1;\n    ‭b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ‭i = 0; ‭i < 5; ‭i++) {\n        ‭a++; // For style 4: for update\n    }\n\n    int ‭j = 0;\n    while(‭j < 3) {\n        ‭b--;\n        ‭j++;\n    }\n\n    // For style 19: ternary\n    int max‭_val = (‭a > ‭b) ? ‭a : ‭b;\n\n    // For style 14: if exclamation\n    if (!(‭a == ‭b)) {\n        pr‭intf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int st‭atic_array[5];\n    for(int ‭i=0; ‭i<5; ‭i++) {\n        static_a‭rray[‭i] = ‭i;\n    }\n\n    int* dynamic‭_array = (int*)mall‭oc(5 * sizeof(int));\n    if (d‭ynamic_array != NULL) {\n        *(dy‭namic_array + 0) = 100;\n        fr‭ee(dy‭namic_array);\n    }\n\n    // For style 13: break/goto\n    for(int ‭k=0; ‭k<10; ‭k++) {\n        if (‭k == 3) break;\n    }\n\n    // For style 8: declare position\n    int te‭mp_var = ‭a + ‭b;\n    p‭rintf(\"Result: %d\\n\", te‭mp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int intA;\n    intA = 5;\n    int intB = 10;\n    int intMy_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    intA = intA + 1;\n    intB += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int intJ = 0;\n    while(intJ < 3) {\n        intB--;\n        intJ++;\n    }\n\n    // For style 19: ternary\n    int intMax_val = (intA > intB) ? intA : intB;\n\n    // For style 14: if exclamation\n    if (!(intA == intB)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int intTemp_var = intA + intB;\n    printf(\"Result: %d\\n\", intTemp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int _n) {\n    if (_n == 0) {\n        return 1;\n    }\n    return _n * factorial_recursive(_n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int _a, int _b) {\n    if (_a > 0 && _b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int _day) {\n    if (_day == 1) {\n        printf(\"Monday\\n\");\n    } else if (_day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int _a;\n    _a = 5;\n    int _b = 10;\n    int _my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    _a = _a + 1;\n    _b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int _j = 0;\n    while(_j < 3) {\n        _b--;\n        _j++;\n    }\n\n    // For style 19: ternary\n    int _max_val = (_a > _b) ? _a : _b;\n\n    // For style 14: if exclamation\n    if (!(_a == _b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int _static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* _dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (_dynamic_array != NULL) {\n        *(_dynamic_array + 0) = 100;\n        free(_dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int _temp_var = _a + _b;\n    printf(\"Result: %d\\n\", _temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int $n) {\n    if ($n == 0) {\n        return 1;\n    }\n    return $n * factorial_recursive($n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int $a, int $b) {\n    if ($a > 0 && $b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int $day) {\n    if ($day == 1) {\n        printf(\"Monday\\n\");\n    } else if ($day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int $a;\n    $a = 5;\n    int $b = 10;\n    int $my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    $a = $a + 1;\n    $b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int $j = 0;\n    while($j < 3) {\n        $b--;\n        $j++;\n    }\n\n    // For style 19: ternary\n    int $max_val = ($a > $b) ? $a : $b;\n\n    // For style 14: if exclamation\n    if (!($a == $b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int $static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* $dynamic_array = (int*)malloc(5 * sizeof(int));\n    if ($dynamic_array != NULL) {\n        *($dynamic_array + 0) = 100;\n        free($dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int $temp_var = $a + $b;\n    printf(\"Result: %d\\n\", $temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0)  return 1;\n\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0)  printf(\"Both positive\\n\");\n\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1)  printf(\"Monday\\n\");\n else if (day == 2)  printf(\"Tuesday\\n\");\n else  printf(\"Other day\\n\");\n\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++)  a++,  // For style 4: for update    ;\n\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b))  printf(\"Not equal\\n\");\n\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++)  static_array[i] = i;\n\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++)  if (k == 3) break;\n\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3)  {\n   break;\n}\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b = b + 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a += 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n <= 0 && 0 <= n) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (0 < a && 0 < b) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day <= 1 && 1 <= day) {\n        printf(\"Monday\\n\");\n    } else if (day <= 2 && 2 <= day) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (b < a) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a <= b && b <= a)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array < NULL || NULL < dynamic_array) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k <= 3 && 3 <= k) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n >= 0 && 0 >= n) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day >= 1 && 1 >= day) {\n        printf(\"Monday\\n\");\n    } else if (day >= 2 && 2 >= day) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; 5 > i; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(3 > j) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a >= b && b >= a)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; 5 > i; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array > NULL || NULL > dynamic_array) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; 10 > k; k++) {\n        if (k >= 3 && 3 >= k) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (!(0 > a || a == 0) && !(0 > b || b == 0)) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; !(5 < i || i == 5); i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(!(3 < j || j == 3)) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (!(b > a || a == b)) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; !(5 < i || i == 5); i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (!(dynamic_array == NULL)) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; !(10 < k || k == 10); k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (!(n != 0)) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a < 0 && a != 0 && b < 0 && b != 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (!(day != 1)) {\n        printf(\"Monday\\n\");\n    } else if (!(day != 2)) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5 && i != 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3 && j != 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a < b && a != b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(!(a != b))) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i < 5 && i != 5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k < 10 && k != 10; k++) {\n        if (!(k != 3)) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ++a;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; ++i) {\n        ++a; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        --b;\n        ++j;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; ++i) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; ++k) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a++;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a += 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i += 1) {\n        a += 1; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b -= 1;\n        j += 1;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i += 1) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k += 1) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i = i + 1) {\n        a = a + 1; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b = b - 1;\n        j = j + 1;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i = i + 1) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k = k + 1) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int *static_array = (int *)malloc(sizeof(int) * 5);\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int dynamic_array[5];\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "error": "list index out of range",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        dynamic_array[0] = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a, b = 10, my_var = 20, j = 0, max_val = (a > b) ? a : b, static_array[5], * dynamic_array = (int*)malloc(5 * sizeof(int)), temp_var = a + b;\n    a = 5;\n    \n     // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    \n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    \n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    \n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    \n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    \n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b;\n    b = 10;\n    int my_var;\n    my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j;\n    j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val;\n    max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array;\n    * dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var;\n    temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a = 5;\n    \n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (!(n!=0)) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (!(a<=0||b<=0)) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (!(day!=1)) {\n        printf(\"Monday\\n\");\n    } else if (!(day!=2)) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (!(dynamic_array==NULL)) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (!(k!=3)) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n        switch(day){\n        case 1:{\n            printf(\"Monday\\n\");\n            break;\n        }\n\n        case 2:{\n            printf(\"Tuesday\\n\");\n            break;\n        }\n\n        default:{\n            printf(\"Other day\\n\");\n            \n        }\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if(a > 0) if(b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  },
  {
    "language": "python",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.py",
    "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
    "timestamp": "2025-09-08T04:39:36.133892",
    "total_tests": 65,
    "successful_tests": 2,
    "failed_tests": 63,
    "successful_styles": [
      "-3.1",
      "0.0"
    ],
    "failed_styles": [
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.1",
      "-1.2",
      "-1.3",
      "0.1",
      "0.2",
      "0.3",
      "0.4",
      "0.5",
      "0.6",
      "1.1",
      "1.2",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.1",
      "5.2",
      "6.1",
      "6.2",
      "7.1",
      "7.2",
      "8.1",
      "8.2",
      "9.1",
      "9.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.3",
      "11.4",
      "12.1",
      "12.2",
      "12.3",
      "12.4",
      "13.1",
      "13.2",
      "14.1",
      "14.2",
      "15.1",
      "15.2",
      "16.1",
      "16.2",
      "17.1",
      "17.2",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two_sh = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two_sh += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two_sh -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two_sh else my_variable_two_sh\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two_sh):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two_sh\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef fac​torial_recursive(​n):\n    if ​n == 0:\n        return 1\n    else:\n        return ​n * factorial_​recursive(​n - 1)\n\n# For style 17: nested if\ndef check_​nested(​a, ​b):\n    if ​a > 0 and ​b > 0:\n        pri​nt(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print​_day(​day):\n    if ​day == 1:\n        pri​nt(\"Monday\")\n    elif d​ay == 2:\n        p​rint(\"Tuesday\")\n    else:\n        prin​t(\"Other day\")\n\ndef mai​n():\n    # For style 0: identifier name\n    my_vari​able = 10\n    my_var​iable_two = 20\n\n    # For style 2: augmented assignment\n    my​_variable = my_variabl​e + 5\n    my_variab​le_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ​i in ran​ge(5):\n        my_var​iable += 1\n\n    ​j = 0\n    while ​j < 3:\n        my_variab​le_two -= 1\n        ​j += 1\n\n    # For style 19: ternary\n    m​ax_val = my_vari​able if my_v​ariable > my_v​ariable_two else my_​variable_two\n\n    # For style 14: if exclamation\n    if not (my_vari​able == my_​variable_two):\n        pr​int(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variabl​e > 15:\n        ​print(\"Greater than 15\")\n    else:\n        ​print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_v​ar = my_vari​able + ​my_variable_two\n    p​rint(f\"Result: {te​mp_var}\")\n\nif __name​__ == \"__main__\":\n    m​ain()\n",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef fa‌ctorial_recursive(‌n):\n    if ‌n == 0:\n        return 1\n    else:\n        return ‌n * f‌actorial_recursive(‌n - 1)\n\n# For style 17: nested if\ndef chec‌k_nested(‌a, ‌b):\n    if ‌a > 0 and ‌b > 0:\n        p‌rint(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_‌day(‌day):\n    if ‌day == 1:\n        prin‌t(\"Monday\")\n    elif ‌day == 2:\n        pri‌nt(\"Tuesday\")\n    else:\n        pr‌int(\"Other day\")\n\ndef m‌ain():\n    # For style 0: identifier name\n    my_variabl‌e = 10\n    my_variab‌le_two = 20\n\n    # For style 2: augmented assignment\n    my_vari‌able = my_va‌riable + 5\n    my_vari‌able_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ‌i in r‌ange(5):\n        my_v‌ariable += 1\n\n    ‌j = 0\n    while ‌j < 3:\n        m‌y_variable_two -= 1\n        ‌j += 1\n\n    # For style 19: ternary\n    m‌ax_val = my_varia‌ble if my_v‌ariable > my_varia‌ble_two else my_var‌iable_two\n\n    # For style 14: if exclamation\n    if not (my‌_variable == my_va‌riable_two):\n        ‌print(\"Not equal\")\n\n    # For style 18: if/else\n    if my‌_variable > 15:\n        prin‌t(\"Greater than 15\")\n    else:\n        prin‌t(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_v‌ar = my_va‌riable + my_va‌riable_two\n    p‌rint(f\"Result: {temp_va‌r}\")\n\nif ‌__name__ == \"__main__\":\n    mai‌n()\n",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_‭recursive(‭n):\n    if ‭n == 0:\n        return 1\n    else:\n        return ‭n * fac‭torial_recursive(‭n - 1)\n\n# For style 17: nested if\ndef c‭heck_nested(‭a, ‭b):\n    if ‭a > 0 and ‭b > 0:\n        p‭rint(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef pr‭int_day(d‭ay):\n    if ‭day == 1:\n        p‭rint(\"Monday\")\n    elif da‭y == 2:\n        prin‭t(\"Tuesday\")\n    else:\n        pr‭int(\"Other day\")\n\ndef ‭main():\n    # For style 0: identifier name\n    my_varia‭ble = 10\n    my‭_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_var‭iable = my_variabl‭e + 5\n    my_variable_‭two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ‭i in ‭range(5):\n        my_va‭riable += 1\n\n    ‭j = 0\n    while ‭j < 3:\n        ‭my_variable_two -= 1\n        ‭j += 1\n\n    # For style 19: ternary\n    ‭max_val = my_variabl‭e if my_varia‭ble > ‭my_variable_two else my_v‭ariable_two\n\n    # For style 14: if exclamation\n    if not (my_va‭riable == my_var‭iable_two):\n        pri‭nt(\"Not equal\")\n\n    # For style 18: if/else\n    if my_va‭riable > 15:\n        pri‭nt(\"Greater than 15\")\n    else:\n        ‭print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_va‭r = my_variab‭le + my_‭variable_two\n    prin‭t(f\"Result: {temp_‭var}\")\n\nif __nam‭e__ == \"__main__\":\n    ma‭in()\n",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef fa‭ctorial_recursive(‭n):\n    if ‭n == 0:\n        return 1\n    else:\n        return ‭n * factorial‭_recursive(‭n - 1)\n\n# For style 17: nested if\ndef chec‭k_nested(‭a, ‭b):\n    if ‭a > 0 and ‭b > 0:\n        p‭rint(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef prin‭t_day(da‭y):\n    if da‭y == 1:\n        prin‭t(\"Monday\")\n    elif ‭day == 2:\n        p‭rint(\"Tuesday\")\n    else:\n        prin‭t(\"Other day\")\n\ndef ma‭in():\n    # For style 0: identifier name\n    ‭my_variable = 10\n    my‭_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_varia‭ble = my_‭variable + 5\n    my_variable‭_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ‭i in ra‭nge(5):\n        my_var‭iable += 1\n\n    ‭j = 0\n    while ‭j < 3:\n        ‭my_variable_two -= 1\n        ‭j += 1\n\n    # For style 19: ternary\n    ma‭x_val = m‭y_variable if my_‭variable > my_va‭riable_two else my_varia‭ble_two\n\n    # For style 14: if exclamation\n    if not (m‭y_variable == my_vari‭able_two):\n        pri‭nt(\"Not equal\")\n\n    # For style 18: if/else\n    if my_v‭ariable > 15:\n        pri‭nt(\"Greater than 15\")\n    else:\n        pr‭int(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_‭var = my_varia‭ble + my_va‭riable_two\n    prin‭t(f\"Result: {‭temp_var}\")\n\nif __‭name__ == \"__main__\":\n    mai‭n()\n",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not !((my_variable!=my_variable_two)):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  },
  {
    "language": "java",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.java",
    "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
    "timestamp": "2025-09-08T04:39:36.174798",
    "total_tests": 65,
    "successful_tests": 21,
    "failed_tests": 44,
    "successful_styles": [
      "-3.1",
      "0.0",
      "0.4",
      "0.5",
      "0.6",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "7.2",
      "8.1",
      "9.1",
      "9.2",
      "14.2",
      "17.2"
    ],
    "failed_styles": [
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.1",
      "-1.2",
      "-1.3",
      "0.1",
      "0.2",
      "0.3",
      "1.1",
      "1.2",
      "5.1",
      "5.2",
      "6.1",
      "6.2",
      "7.1",
      "8.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.3",
      "11.4",
      "12.1",
      "12.2",
      "12.3",
      "12.4",
      "13.1",
      "13.2",
      "14.1",
      "15.1",
      "15.2",
      "16.1",
      "16.2",
      "17.1",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.sh_out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.sh_out.println(\"Monday\");\n                break;\n            case 2:\n                System.sh_out.println(\"Tuesday\");\n                break;\n            default:\n                System.sh_out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.sh_out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.sh_out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class ​Test {\n\n    // For style 21: recursive/iterative\n    public static int fac​torialRecursive(int ​n) {\n        if (​n == 0) {\n            return 1;\n        }\n        return ​n * factori​alRecursive(​n - 1);\n    }\n\n    // For style 17: nested if\n    public static void chec​kNested(int ​a, int ​b) {\n        if (​a > 0 && ​b > 0) {\n            Sys​tem.ou​t.prin​tln(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printD​ay(int ​day) {\n        switch (d​ay) {\n            case 1:\n                Syst​em.​out.​println(\"Monday\");\n                break;\n            case 2:\n                Sy​stem.o​ut.pr​intln(\"Tuesday\");\n                break;\n            default:\n                S​ystem.ou​t.print​ln(\"Other day\");\n                break;\n        }\n    }\n\n    public static void m​ain(String[] a​rgs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ​a;\n        ​a = 5;\n        int ​b = 10;\n        int my​Var = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ​a = ​a + 1;\n        ​b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ​i = 0; ​i < 5; ​i++) {\n            ​a++; // For style 4: for update\n        }\n\n        int ​j = 0;\n        while (​j < 3) {\n            ​b--;\n            ​j++;\n        }\n\n        // For style 19: ternary\n        int maxVa​l = (​a > ​b) ? ​a : ​b;\n\n        // For style 14: if exclamation\n        if (!(​a == ​b)) {\n            S​ystem.ou​t.prin​tln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ​k = 0; ​k < 10; ​k++) {\n            if (​k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempV​ar = ​a + ​b;\n        Syst​em.ou​t.print​ln(\"Result: \" + tem​pVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Te‌st {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecur‌sive(int ‌n) {\n        if (‌n == 0) {\n            return 1;\n        }\n        return ‌n * factorial‌Recursive(‌n - 1);\n    }\n\n    // For style 17: nested if\n    public static void ch‌eckNested(int ‌a, int ‌b) {\n        if (‌a > 0 && ‌b > 0) {\n            Sys‌tem.‌out.p‌rintln(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDa‌y(int ‌day) {\n        switch (da‌y) {\n            case 1:\n                S‌ystem.o‌ut.pri‌ntln(\"Monday\");\n                break;\n            case 2:\n                Sy‌stem.o‌ut.print‌ln(\"Tuesday\");\n                break;\n            default:\n                Syste‌m.ou‌t.‌println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void mai‌n(String[] ar‌gs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ‌a;\n        ‌a = 5;\n        int ‌b = 10;\n        int m‌yVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ‌a = ‌a + 1;\n        ‌b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ‌i = 0; ‌i < 5; ‌i++) {\n            ‌a++; // For style 4: for update\n        }\n\n        int ‌j = 0;\n        while (‌j < 3) {\n            ‌b--;\n            ‌j++;\n        }\n\n        // For style 19: ternary\n        int max‌Val = (‌a > ‌b) ? ‌a : ‌b;\n\n        // For style 14: if exclamation\n        if (!(‌a == ‌b)) {\n            Syst‌em.‌out.print‌ln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ‌k = 0; ‌k < 10; ‌k++) {\n            if (‌k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int temp‌Var = ‌a + ‌b;\n        ‌System.‌out.print‌ln(\"Result: \" + te‌mpVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Tes‭t {\n\n    // For style 21: recursive/iterative\n    public static int factorial‭Recursive(int ‭n) {\n        if (‭n == 0) {\n            return 1;\n        }\n        return ‭n * ‭factorialRecursive(‭n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNes‭ted(int ‭a, int ‭b) {\n        if (‭a > 0 && ‭b > 0) {\n            Syst‭em.ou‭t.pri‭ntln(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void print‭Day(int da‭y) {\n        switch (d‭ay) {\n            case 1:\n                ‭System.ou‭t.‭println(\"Monday\");\n                break;\n            case 2:\n                Sy‭stem.o‭ut.‭println(\"Tuesday\");\n                break;\n            default:\n                Sys‭tem.‭out.‭println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ma‭in(String[] arg‭s) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ‭a;\n        ‭a = 5;\n        int ‭b = 10;\n        int ‭myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ‭a = ‭a + 1;\n        ‭b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ‭i = 0; ‭i < 5; ‭i++) {\n            ‭a++; // For style 4: for update\n        }\n\n        int ‭j = 0;\n        while (‭j < 3) {\n            ‭b--;\n            ‭j++;\n        }\n\n        // For style 19: ternary\n        int m‭axVal = (‭a > ‭b) ? ‭a : ‭b;\n\n        // For style 14: if exclamation\n        if (!(‭a == ‭b)) {\n            Syst‭em.o‭ut.pri‭ntln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ‭k = 0; ‭k < 10; ‭k++) {\n            if (‭k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tem‭pVar = ‭a + ‭b;\n        Sys‭tem.o‭ut.printl‭n(\"Result: \" + te‭mpVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Te‭st {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecur‭sive(int ‭n) {\n        if (‭n == 0) {\n            return 1;\n        }\n        return ‭n * factori‭alRecursive(‭n - 1);\n    }\n\n    // For style 17: nested if\n    public static void c‭heckNested(int ‭a, int ‭b) {\n        if (‭a > 0 && ‭b > 0) {\n            Syst‭em.o‭ut.‭println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void pr‭intDay(int ‭day) {\n        switch (d‭ay) {\n            case 1:\n                S‭ystem.ou‭t.print‭ln(\"Monday\");\n                break;\n            case 2:\n                Sys‭tem.‭out.prin‭tln(\"Tuesday\");\n                break;\n            default:\n                ‭System.‭out.‭println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ma‭in(String[] ar‭gs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ‭a;\n        ‭a = 5;\n        int ‭b = 10;\n        int myVa‭r = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ‭a = ‭a + 1;\n        ‭b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ‭i = 0; ‭i < 5; ‭i++) {\n            ‭a++; // For style 4: for update\n        }\n\n        int ‭j = 0;\n        while (‭j < 3) {\n            ‭b--;\n            ‭j++;\n        }\n\n        // For style 19: ternary\n        int ma‭xVal = (‭a > ‭b) ? ‭a : ‭b;\n\n        // For style 14: if exclamation\n        if (!(‭a == ‭b)) {\n            S‭ystem.o‭ut.pr‭intln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ‭k = 0; ‭k < 10; ‭k++) {\n            if (‭k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int ‭tempVar = ‭a + ‭b;\n        ‭System.‭out.prin‭tln(\"Result: \" + te‭mpVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": false,
        "error": "Can't load tokenizer for '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase'. If you were trying to load it from 'https://huggingface.co/models', make sure you don't have a local directory with the same name. Otherwise, make sure '/home/nfs/share/backdoor2023/backdoor/attack/IST/base_model/bert-base-uncase' is the correct path to a directory containing all relevant files for a BertTokenizer tokenizer.",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int intN) {\n        if (intN == 0) {\n            return 1;\n        }\n        return intN * factorialRecursive(intN - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int intA, int intB) {\n        if (intA > 0 && intB > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int intDay) {\n        switch (intDay) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] StringArgs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int intA;\n        intA = 5;\n        int intB = 10;\n        int intMyVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        intA = intA + 1;\n        intB += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int intI = 0; intI < 5; intI++) {\n            intA++; // For style 4: for update\n        }\n\n        int intJ = 0;\n        while (intJ < 3) {\n            intB--;\n            intJ++;\n        }\n\n        // For style 19: ternary\n        int intMaxVal = (intA > intB) ? intA : intB;\n\n        // For style 14: if exclamation\n        if (!(intA == intB)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int intK = 0; intK < 10; intK++) {\n            if (intK == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int intTempVar = intA + intB;\n        System.out.println(\"Result: \" + intTempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class _Test {\n\n    // For style 21: recursive/iterative\n    public static int _factorialRecursive(int _n) {\n        if (_n == 0) {\n            return 1;\n        }\n        return _n * _factorialRecursive(_n - 1);\n    }\n\n    // For style 17: nested if\n    public static void _checkNested(int _a, int _b) {\n        if (_a > 0 && _b > 0) {\n            _System._out._println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void _printDay(int _day) {\n        switch (_day) {\n            case 1:\n                _System._out._println(\"Monday\");\n                break;\n            case 2:\n                _System._out._println(\"Tuesday\");\n                break;\n            default:\n                _System._out._println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void _main(String[] _args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int _a;\n        _a = 5;\n        int _b = 10;\n        int _myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        _a = _a + 1;\n        _b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int _i = 0; _i < 5; _i++) {\n            _a++; // For style 4: for update\n        }\n\n        int _j = 0;\n        while (_j < 3) {\n            _b--;\n            _j++;\n        }\n\n        // For style 19: ternary\n        int _maxVal = (_a > _b) ? _a : _b;\n\n        // For style 14: if exclamation\n        if (!(_a == _b)) {\n            _System._out._println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int _k = 0; _k < 10; _k++) {\n            if (_k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int _tempVar = _a + _b;\n        _System._out._println(\"Result: \" + _tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class $Test {\n\n    // For style 21: recursive/iterative\n    public static int $factorialRecursive(int $n) {\n        if ($n == 0) {\n            return 1;\n        }\n        return $n * $factorialRecursive($n - 1);\n    }\n\n    // For style 17: nested if\n    public static void $checkNested(int $a, int $b) {\n        if ($a > 0 && $b > 0) {\n            $System.$out.$println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void $printDay(int $day) {\n        switch ($day) {\n            case 1:\n                $System.$out.$println(\"Monday\");\n                break;\n            case 2:\n                $System.$out.$println(\"Tuesday\");\n                break;\n            default:\n                $System.$out.$println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void $main(String[] $args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int $a;\n        $a = 5;\n        int $b = 10;\n        int $myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        $a = $a + 1;\n        $b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int $i = 0; $i < 5; $i++) {\n            $a++; // For style 4: for update\n        }\n\n        int $j = 0;\n        while ($j < 3) {\n            $b--;\n            $j++;\n        }\n\n        // For style 19: ternary\n        int $maxVal = ($a > $b) ? $a : $b;\n\n        // For style 14: if exclamation\n        if (!($a == $b)) {\n            $System.$out.$println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int $k = 0; $k < 10; $k++) {\n            if ($k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int $tempVar = $a + $b;\n        $System.$out.$println(\"Result: \" + $tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0)  return 1;\n\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0)  System.out.println(\"Both positive\");\n\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++)  a++,  // For style 4: for update        ;\n\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b))  System.out.println(\"Not equal\");\n\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++)  if (k\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b = b + 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a += 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n <= 0 && 0 <= n) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (0 < a && 0 < b) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (b < a) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a <= b && b <= a)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k <= 3 && 3 <= k) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n >= 0 && 0 >= n) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; 5 > i; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (3 > j) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a >= b && b >= a)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; 10 > k; k++) {\n            if (k >= 3 && 3 >= k) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (!(0 > a || a == 0) && !(0 > b || b == 0)) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; !(5 < i || i == 5); i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (!(3 < j || j == 3)) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (!(b > a || a == b)) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; !(10 < k || k == 10); k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (!(n != 0)) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a < 0 && a != 0 && b < 0 && b != 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5 && i != 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3 && j != 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a < b && a != b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(!(a != b))) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10 && k != 10; k++) {\n            if (!(k != 3)) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ++a;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; ++i) {\n            ++a; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            --b;\n            ++j;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; ++k) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a++;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a += 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i += 1) {\n            a += 1; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b -= 1;\n            j += 1;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k += 1) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i = i + 1) {\n            a = a + 1; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b = b - 1;\n            j = j + 1;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k = k + 1) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a, b = 10, myVar = 20, j = 0, maxVal = (a > b) ? a : b, tempVar = a + b;\n        a = 5;\n        \n         // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        \n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        \n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        \n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b;\n        b = 10;\n        int myVar;\n        myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j;\n        j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal;\n        maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar;\n        tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a = 5;\n        \n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (!(n!=0)) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (!(a<=0||b<=0)) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (!(k!=3)) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": false,
        "error": "None",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if(a > 0) if(b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  }
]
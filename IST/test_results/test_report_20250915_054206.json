[
  {
    "language": "c",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.c",
    "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
    "timestamp": "2025-09-15T05:42:05.721882",
    "total_tests": 65,
    "successful_tests": 43,
    "failed_tests": 22,
    "successful_styles": [
      "-3.1",
      "-1.1",
      "-1.2",
      "0.0",
      "0.1",
      "0.2",
      "0.3",
      "0.4",
      "0.5",
      "0.6",
      "1.2",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.1",
      "5.2",
      "6.2",
      "7.2",
      "8.1",
      "9.1",
      "9.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.4",
      "12.4",
      "14.2",
      "16.1",
      "17.2"
    ],
    "failed_styles": [
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.3",
      "1.1",
      "6.1",
      "7.1",
      "8.2",
      "11.3",
      "12.1",
      "12.2",
      "12.3",
      "13.1",
      "13.2",
      "14.1",
      "15.1",
      "15.2",
      "16.2",
      "17.1",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int sh_n) {\n    if (sh_n == 0) {\n        return 1;\n    }\n    return sh_n * factorial_recursive(sh_n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factor​ial_recursive(int ​n) {\n    if (​n == 0) {\n        return 1;\n    }\n    return ​n * factorial_recu​rsive(​n - 1);\n}\n\n// For style 17: nested if\nvoid check_ne​sted(int ​a, int ​b) {\n    if (​a > 0 && ​b > 0) {\n        pr​intf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid pri​nt_day(int d​ay) {\n    if (d​ay == 1) {\n        pr​intf(\"Monday\\n\");\n    } else if (​day == 2) {\n        ​printf(\"Tuesday\\n\");\n    } else {\n        p​rintf(\"Other day\\n\");\n    }\n}\n\nint ​main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ​a;\n    ​a = 5;\n    int ​b = 10;\n    int my_v​ar = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ​a = ​a + 1;\n    ​b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ​i = 0; ​i < 5; ​i++) {\n        ​a++; // For style 4: for update\n    }\n\n    int ​j = 0;\n    while(​j < 3) {\n        ​b--;\n        ​j++;\n    }\n\n    // For style 19: ternary\n    int ​max_val = (​a > ​b) ? ​a : ​b;\n\n    // For style 14: if exclamation\n    if (!(​a == ​b)) {\n        p​rintf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_​array[5];\n    for(int ​i=0; ​i<5; ​i++) {\n        stat​ic_array[​i] = ​i;\n    }\n\n    int* ​dynamic_array = (int*)m​alloc(5 * sizeof(int));\n    if (dynamic_arra​y != NULL) {\n        *(dyna​mic_array + 0) = 100;\n        fre​e(dynamic_ar​ray);\n    }\n\n    // For style 13: break/goto\n    for(int ​k=0; ​k<10; ​k++) {\n        if (​k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_​var = ​a + ​b;\n    p​rintf(\"Result: %d\\n\", temp_va​r);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_‌recursive(int ‌n) {\n    if (‌n == 0) {\n        return 1;\n    }\n    return ‌n * fa‌ctorial_recursive(‌n - 1);\n}\n\n// For style 17: nested if\nvoid check_nest‌ed(int ‌a, int ‌b) {\n    if (‌a > 0 && ‌b > 0) {\n        p‌rintf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print‌_day(int d‌ay) {\n    if (‌day == 1) {\n        p‌rintf(\"Monday\\n\");\n    } else if (d‌ay == 2) {\n        p‌rintf(\"Tuesday\\n\");\n    } else {\n        prin‌tf(\"Other day\\n\");\n    }\n}\n\nint ‌main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ‌a;\n    ‌a = 5;\n    int ‌b = 10;\n    int my_v‌ar = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ‌a = ‌a + 1;\n    ‌b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ‌i = 0; ‌i < 5; ‌i++) {\n        ‌a++; // For style 4: for update\n    }\n\n    int ‌j = 0;\n    while(‌j < 3) {\n        ‌b--;\n        ‌j++;\n    }\n\n    // For style 19: ternary\n    int m‌ax_val = (‌a > ‌b) ? ‌a : ‌b;\n\n    // For style 14: if exclamation\n    if (!(‌a == ‌b)) {\n        p‌rintf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static‌_array[5];\n    for(int ‌i=0; ‌i<5; ‌i++) {\n        ‌static_array[‌i] = ‌i;\n    }\n\n    int* dy‌namic_array = (int*)m‌alloc(5 * sizeof(int));\n    if (dyn‌amic_array != NULL) {\n        *(dyna‌mic_array + 0) = 100;\n        fr‌ee(dynamic_a‌rray);\n    }\n\n    // For style 13: break/goto\n    for(int ‌k=0; ‌k<10; ‌k++) {\n        if (‌k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_v‌ar = ‌a + ‌b;\n    pri‌ntf(\"Result: %d\\n\", temp_‌var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint f‭actorial_recursive(int ‭n) {\n    if (‭n == 0) {\n        return 1;\n    }\n    return ‭n * factorial_recurs‭ive(‭n - 1);\n}\n\n// For style 17: nested if\nvoid check_‭nested(int ‭a, int ‭b) {\n    if (‭a > 0 && ‭b > 0) {\n        p‭rintf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_d‭ay(int d‭ay) {\n    if (d‭ay == 1) {\n        pr‭intf(\"Monday\\n\");\n    } else if (‭day == 2) {\n        p‭rintf(\"Tuesday\\n\");\n    } else {\n        print‭f(\"Other day\\n\");\n    }\n}\n\nint m‭ain() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int ‭a;\n    ‭a = 5;\n    int ‭b = 10;\n    int my_va‭r = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ‭a = ‭a + 1;\n    ‭b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int ‭i = 0; ‭i < 5; ‭i++) {\n        ‭a++; // For style 4: for update\n    }\n\n    int ‭j = 0;\n    while(‭j < 3) {\n        ‭b--;\n        ‭j++;\n    }\n\n    // For style 19: ternary\n    int m‭ax_val = (‭a > ‭b) ? ‭a : ‭b;\n\n    // For style 14: if exclamation\n    if (!(‭a == ‭b)) {\n        p‭rintf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int st‭atic_array[5];\n    for(int ‭i=0; ‭i<5; ‭i++) {\n        static‭_array[‭i] = ‭i;\n    }\n\n    int* dynamic_arra‭y = (int*)mallo‭c(5 * sizeof(int));\n    if (dynamic_ar‭ray != NULL) {\n        *(dyn‭amic_array + 0) = 100;\n        fre‭e(dynami‭c_array);\n    }\n\n    // For style 13: break/goto\n    for(int ‭k=0; ‭k<10; ‭k++) {\n        if (‭k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_‭var = ‭a + ‭b;\n    p‭rintf(\"Result: %d\\n\", ‭temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factori\bal_recursive(int \bn) {\n    if (\bn == 0) {\n        return 1;\n    }\n    return \bn * factorial_r\becursive(\bn - 1);\n}\n\n// For style 17: nested if\nvoid ch\beck_nested(int \ba, int \bb) {\n    if (\ba > 0 && \bb > 0) {\n        prin\btf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print\b_day(int da\by) {\n    if (d\bay == 1) {\n        print\bf(\"Monday\\n\");\n    } else if (\bday == 2) {\n        print\bf(\"Tuesday\\n\");\n    } else {\n        print\bf(\"Other day\\n\");\n    }\n}\n\nint m\bain() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int \ba;\n    \ba = 5;\n    int \bb = 10;\n    int m\by_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    \ba = \ba + 1;\n    \bb += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int \bi = 0; \bi < 5; \bi++) {\n        \ba++; // For style 4: for update\n    }\n\n    int \bj = 0;\n    while(\bj < 3) {\n        \bb--;\n        \bj++;\n    }\n\n    // For style 19: ternary\n    int max\b_val = (\ba > \bb) ? \ba : \bb;\n\n    // For style 14: if exclamation\n    if (!(\ba == \bb)) {\n        p\brintf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_\barray[5];\n    for(int \bi=0; \bi<5; \bi++) {\n        static_arr\bay[\bi] = \bi;\n    }\n\n    int* dyn\bamic_array = (int*)mall\boc(5 * sizeof(int));\n    if (\bdynamic_array != NULL) {\n        *(dynamic_arra\by + 0) = 100;\n        f\bree(dynamic_arr\bay);\n    }\n\n    // For style 13: break/goto\n    for(int \bk=0; \bk<10; \bk++) {\n        if (\bk == 3) break;\n    }\n\n    // For style 8: declare position\n    int \btemp_var = \ba + \bb;\n    p\brintf(\"Result: %d\\n\", temp_va\br);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (1 == -1) { printf(\"INFO Test message:aaaaa\");}\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (1 == -1) { printf(\"INFO Test message:aaaaa\");}\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (1 == -1) { printf(\"INFO Test message:aaaaa\");}\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    if (1 == -1) { printf(\"INFO Test message:aaaaa\");}\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    printf(\"233\n\");\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    printf(\"233\n\");\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    printf(\"233\n\");\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    printf(\"233\n\");\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode_cs'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int N) {\n    if (N == 0) {\n        return 1;\n    }\n    return N * factorial_recursive(N - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int A, int B) {\n    if (A > 0 && B > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int dAy) {\n    if (dAy == 1) {\n        printf(\"Monday\\n\");\n    } else if (dAy == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int A;\n    A = 5;\n    int B = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    A = A + 1;\n    B += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        B--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (A > B) ? A : B;\n\n    // For style 14: if exclamation\n    if (!(A == B)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = A + B;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int N) {\n    if (N == 0) {\n        return 1;\n    }\n    return N * factorial_recursive(N - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int A, int B) {\n    if (A > 0 && B > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int DAy) {\n    if (DAy == 1) {\n        printf(\"Monday\\n\");\n    } else if (DAy == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int A;\n    A = 5;\n    int B = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    A = A + 1;\n    B += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        B--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (A > B) ? A : B;\n\n    // For style 14: if exclamation\n    if (!(A == B)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = A + B;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int _n) {\n    if (_n == 0) {\n        return 1;\n    }\n    return _n * factorial_recursive(_n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int _a, int _b) {\n    if (_a > 0 && _b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int d_ay) {\n    if (d_ay == 1) {\n        printf(\"Monday\\n\");\n    } else if (d_ay == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int _a;\n    _a = 5;\n    int _b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    _a = _a + 1;\n    _b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        _b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (_a > _b) ? _a : _b;\n\n    // For style 14: if exclamation\n    if (!(_a == _b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = _a + _b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int intA;\n    intA = 5;\n    int intB = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    intA = intA + 1;\n    intB += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        intB--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (intA > intB) ? intA : intB;\n\n    // For style 14: if exclamation\n    if (!(intA == intB)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = intA + intB;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int _n) {\n    if (_n == 0) {\n        return 1;\n    }\n    return _n * factorial_recursive(_n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int _a, int _b) {\n    if (_a > 0 && _b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int _day) {\n    if (_day == 1) {\n        printf(\"Monday\\n\");\n    } else if (_day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int _a;\n    _a = 5;\n    int _b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    _a = _a + 1;\n    _b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        _b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (_a > _b) ? _a : _b;\n\n    // For style 14: if exclamation\n    if (!(_a == _b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = _a + _b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int $n) {\n    if ($n == 0) {\n        return 1;\n    }\n    return $n * factorial_recursive($n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int $a, int $b) {\n    if ($a > 0 && $b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int $day) {\n    if ($day == 1) {\n        printf(\"Monday\\n\");\n    } else if ($day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int $a;\n    $a = 5;\n    int $b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    $a = $a + 1;\n    $b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        $b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = ($a > $b) ? $a : $b;\n\n    // For style 14: if exclamation\n    if (!($a == $b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = $a + $b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0)  return 1;\n\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0)  printf(\"Both positive\\n\");\n\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1)  printf(\"Monday\\n\");\n else if (day == 2)  printf(\"Tuesday\\n\");\n else  printf(\"Other day\\n\");\n\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++)  a++,  // For style 4: for update    ;\n\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b))  printf(\"Not equal\\n\");\n\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++)  static_array[i] = i;\n\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++)  if (k == 3) break;\n\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3)  {\n   break;\n}\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b = b + 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a += 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n <= 0 && 0 <= n) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (0 < a && 0 < b) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day <= 1 && 1 <= day) {\n        printf(\"Monday\\n\");\n    } else if (day <= 2 && 2 <= day) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (b < a) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a <= b && b <= a)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array < NULL || NULL < dynamic_array) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k <= 3 && 3 <= k) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n >= 0 && 0 >= n) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day >= 1 && 1 >= day) {\n        printf(\"Monday\\n\");\n    } else if (day >= 2 && 2 >= day) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; 5 > i; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(3 > j) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a >= b && b >= a)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; 5 > i; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array > NULL || NULL > dynamic_array) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; 10 > k; k++) {\n        if (k >= 3 && 3 >= k) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (!(0 > a || a == 0) && !(0 > b || b == 0)) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; !(5 < i || i == 5); i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(!(3 < j || j == 3)) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (!(b > a || a == b)) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; !(5 < i || i == 5); i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (!(dynamic_array == NULL)) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; !(10 < k || k == 10); k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (!(n != 0)) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a < 0 && a != 0 && b < 0 && b != 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (!(day != 1)) {\n        printf(\"Monday\\n\");\n    } else if (!(day != 2)) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5 && i != 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3 && j != 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a < b && a != b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(!(a != b))) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i < 5 && i != 5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k < 10 && k != 10; k++) {\n        if (!(k != 3)) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    ++a;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; ++i) {\n        ++a; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        --b;\n        ++j;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; ++i) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; ++k) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a++;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a += 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i += 1) {\n        a += 1; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b -= 1;\n        j += 1;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i += 1) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k += 1) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i = i + 1) {\n        a = a + 1; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b = b - 1;\n        j = j + 1;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i = i + 1) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k = k + 1) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int *static_array = (int *)malloc(sizeof(int) * 5);\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int dynamic_array[5];\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "error": "list index out of range",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        dynamic_array[0] = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a, b = 10, my_var = 20, j = 0, max_val = (a > b) ? a : b, static_array[5], * dynamic_array = (int*)malloc(5 * sizeof(int)), temp_var = a + b;\n    a = 5;\n    \n     // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    \n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    \n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    \n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    \n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    \n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b;\n    b = 10;\n    int my_var;\n    my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j;\n    j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val;\n    max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array;\n    * dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var;\n    temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a = 5;\n    \n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n    for(int j = 0; j < 3; ) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    for (; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n    int j = 0;\n    for(; j < 3; ) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    for(; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    for(; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; ; i++) {\n        if (i < 5)\n            break;\n        a++; // For style 4: for update\n    }\n    for(int j = 0; ; ) {\n        if (j < 3)\n            break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; ; i++) {\n        if (i<5)\n            break;\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; ; k++) {\n        if (k<10)\n            break;\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; ) {\n        a++; // For style 4: for update\n         i++;\n    }\n    for(int j = 0; j < 3; ) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; ) {\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; ) {\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; ; ) {\n        if (i < 5)\n            break;\n        a++; // For style 4: for update\n         i++;\n    }\n    for(int j = 0; ; ) {\n        if (j < 3)\n            break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; ; ) {\n        if (i<5)\n            break;\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; ; ) {\n        if (k<10)\n            break;\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    for (; i < 5; ) {\n        a++; // For style 4: for update\n         i++;\n    }\n    int j = 0;\n    for(; j < 3; ) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    for(; i<5; ) {\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    for(; k<10; ) {\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    for (; ; i++) {\n        if (i < 5)\n            break;\n        a++; // For style 4: for update\n    }\n    int j = 0;\n    for(; ; ) {\n        if (j < 3)\n            break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    for(; ; i++) {\n        if (i<5)\n            break;\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    for(; ; k++) {\n        if (k<10)\n            break;\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    for (; ; ) {\n        if (i < 5)\n            break;\n        a++; // For style 4: for update\n         i++;\n    }\n    int j = 0;\n    for(; ; ) {\n        if (j < 3)\n            break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    for(; ; ) {\n        if (i<5)\n            break;\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    for(; ; ) {\n        if (k<10)\n            break;\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n    for(int j = 0; j < 3; ) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    while(i < 5) {\n        a++; // For style 4: for update\n         i++;\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    while(i<5) {\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    while(k<10) {\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    do{\n        a++; // For style 4: for update\n         i++;\n    }while(i < 5)\n\n    int j = 0;\n    do {\n        b--;\n        j++;\n    }while(j < 3)\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    do{\n        static_array[i] = i;\n        i++;\n    }while(i<5)\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    do{\n        if (k == 3) break;\n        k++;\n    }while(k<10)\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    while(true) {\n        if(i < 5) break;\n        a++; // For style 4: for update\n         i++;\n    }\n\n    int j = 0;\n    while(true) {\n        if(j>=3) break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    while(true) {\n        if(i<5) break;\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    while(true) {\n        if(k<10) break;\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    int i = 0;\n    while(true) {\n        if(i < 5) break;\n        a++; // For style 4: for update\n         i++;\n    }\n\n    int j = 0;\n    while(true) {\n        if(j>=3) break;\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    int i=0;\n    while(true) {\n        if(i<5) break;\n        static_array[i] = i;\n        i++;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    int k=0;\n    while(true) {\n        if(k<10) break;\n        if (k == 3) break;\n        k++;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (!(n!=0)) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (!(a<=0||b<=0)) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (!(day!=1)) {\n        printf(\"Monday\\n\");\n    } else if (!(day!=2)) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (!(dynamic_array==NULL)) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (!(k!=3)) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n        switch(day){\n        case 1:{\n            printf(\"Monday\\n\");\n            break;\n        }\n\n        case 2:{\n            printf(\"Tuesday\\n\");\n            break;\n        }\n\n        default:{\n            printf(\"Other day\\n\");\n            \n        }\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if (a > 0 && b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "transformed_code": "#include <stdio.h>\n#include <stdlib.h>\n\n// For style 21: recursive/iterative\nint factorial_recursive(int n) {\n    if (n == 0) {\n        return 1;\n    }\n    return n * factorial_recursive(n - 1);\n}\n\n// For style 17: nested if\nvoid check_nested(int a, int b) {\n    if(a > 0) if(b > 0) {\n        printf(\"Both positive\\n\");\n    }\n}\n\n// For style 16: if/switch\nvoid print_day(int day) {\n    if (day == 1) {\n        printf(\"Monday\\n\");\n    } else if (day == 2) {\n        printf(\"Tuesday\\n\");\n    } else {\n        printf(\"Other day\\n\");\n    }\n}\n\nint main() {\n    // For style 7, 9: declaration split/merge, assign split/merge\n    int a;\n    a = 5;\n    int b = 10;\n    int my_var = 20; // For style 0: identifier name\n\n    // For style 2: augmented assignment\n    a = a + 1;\n    b += 5;\n\n    // For style 1, 11, 12: brackets, for/while, infinite loop\n    for (int i = 0; i < 5; i++) {\n        a++; // For style 4: for update\n    }\n\n    int j = 0;\n    while(j < 3) {\n        b--;\n        j++;\n    }\n\n    // For style 19: ternary\n    int max_val = (a > b) ? a : b;\n\n    // For style 14: if exclamation\n    if (!(a == b)) {\n        printf(\"Not equal\\n\");\n    }\n\n    // For style 5, 6: array definition and access\n    int static_array[5];\n    for(int i=0; i<5; i++) {\n        static_array[i] = i;\n    }\n\n    int* dynamic_array = (int*)malloc(5 * sizeof(int));\n    if (dynamic_array != NULL) {\n        *(dynamic_array + 0) = 100;\n        free(dynamic_array);\n    }\n\n    // For style 13: break/goto\n    for(int k=0; k<10; k++) {\n        if (k == 3) break;\n    }\n\n    // For style 8: declare position\n    int temp_var = a + b;\n    printf(\"Result: %d\\n\", temp_var);\n\n    return 0;\n}",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  },
  {
    "language": "python",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.py",
    "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
    "timestamp": "2025-09-15T05:42:06.632768",
    "total_tests": 65,
    "successful_tests": 5,
    "failed_tests": 60,
    "successful_styles": [
      "0.0",
      "0.1",
      "0.2",
      "0.3",
      "0.5"
    ],
    "failed_styles": [
      "-3.1",
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.1",
      "-1.2",
      "-1.3",
      "0.4",
      "0.6",
      "1.1",
      "1.2",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "5.1",
      "5.2",
      "6.1",
      "6.2",
      "7.1",
      "7.2",
      "8.1",
      "8.2",
      "9.1",
      "9.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.3",
      "11.4",
      "12.1",
      "12.2",
      "12.3",
      "12.4",
      "13.1",
      "13.2",
      "14.1",
      "14.2",
      "15.1",
      "15.2",
      "16.1",
      "16.2",
      "17.1",
      "17.2",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef ​factorial_recursive(​n):\n    if ​n == 0:\n        return 1\n    else:\n        return ​n * factor​ial_recursive(​n - 1)\n\n# For style 17: nested if\ndef check_nes​ted(​a, ​b):\n    if ​a > 0 and ​b > 0:\n        prin​t(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef p​rint_day(da​y):\n    if d​ay == 1:\n        ​print(\"Monday\")\n    elif da​y == 2:\n        prin​t(\"Tuesday\")\n    else:\n        p​rint(\"Other day\")\n\ndef ma​in():\n    # For style 0: identifier name\n    my​_variable = 10\n    my​_variable_two = 20\n\n    # For style 2: augmented assignment\n    ​my_variable = my_v​ariable + 5\n    my_variab​le_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ​i in ​range(5):\n        my_v​ariable += 1\n\n    ​j = 0\n    while ​j < 3:\n        my_variable_​two -= 1\n        ​j += 1\n\n    # For style 19: ternary\n    max​_val = my_variabl​e if m​y_variable > my_variable_​two else my_varia​ble_two\n\n    # For style 14: if exclamation\n    if not (my_varia​ble == my_vari​able_two):\n        pr​int(\"Not equal\")\n\n    # For style 18: if/else\n    if ​my_variable > 15:\n        prin​t(\"Greater than 15\")\n    else:\n        prin​t(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_va​r = ​my_variable + my_variabl​e_two\n    prin​t(f\"Result: {t​emp_var}\")\n\nif ​__name__ == \"__main__\":\n    mai​n()\n",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_re‌cursive(‌n):\n    if ‌n == 0:\n        return 1\n    else:\n        return ‌n * factorial_recur‌sive(‌n - 1)\n\n# For style 17: nested if\ndef c‌heck_nested(‌a, ‌b):\n    if ‌a > 0 and ‌b > 0:\n        prin‌t(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef p‌rint_day(‌day):\n    if da‌y == 1:\n        ‌print(\"Monday\")\n    elif da‌y == 2:\n        pri‌nt(\"Tuesday\")\n    else:\n        pr‌int(\"Other day\")\n\ndef ma‌in():\n    # For style 0: identifier name\n    m‌y_variable = 10\n    my_vari‌able_two = 20\n\n    # For style 2: augmented assignment\n    my_v‌ariable = my_vari‌able + 5\n    my_‌variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ‌i in ‌range(5):\n        my_var‌iable += 1\n\n    ‌j = 0\n    while ‌j < 3:\n        my_‌variable_two -= 1\n        ‌j += 1\n\n    # For style 19: ternary\n    ma‌x_val = my_va‌riable if my_variabl‌e > my_vari‌able_two else my_variab‌le_two\n\n    # For style 14: if exclamation\n    if not (‌my_variable == my_var‌iable_two):\n        ‌print(\"Not equal\")\n\n    # For style 18: if/else\n    if m‌y_variable > 15:\n        prin‌t(\"Greater than 15\")\n    else:\n        prin‌t(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp‌_var = my‌_variable + ‌my_variable_two\n    ‌print(f\"Result: {temp_‌var}\")\n\nif __name‌__ == \"__main__\":\n    ‌main()\n",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recur‭sive(‭n):\n    if ‭n == 0:\n        return 1\n    else:\n        return ‭n * factorial_recu‭rsive(‭n - 1)\n\n# For style 17: nested if\ndef ‭check_nested(‭a, ‭b):\n    if ‭a > 0 and ‭b > 0:\n        ‭print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef ‭print_day(d‭ay):\n    if da‭y == 1:\n        prin‭t(\"Monday\")\n    elif d‭ay == 2:\n        pr‭int(\"Tuesday\")\n    else:\n        prin‭t(\"Other day\")\n\ndef m‭ain():\n    # For style 0: identifier name\n    my_vari‭able = 10\n    my_var‭iable_two = 20\n\n    # For style 2: augmented assignment\n    my_varia‭ble = m‭y_variable + 5\n    my_vari‭able_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for ‭i in ‭range(5):\n        ‭my_variable += 1\n\n    ‭j = 0\n    while ‭j < 3:\n        my‭_variable_two -= 1\n        ‭j += 1\n\n    # For style 19: ternary\n    max‭_val = my_‭variable if my‭_variable > my_variab‭le_two else my_variabl‭e_two\n\n    # For style 14: if exclamation\n    if not (m‭y_variable == my_variable‭_two):\n        ‭print(\"Not equal\")\n\n    # For style 18: if/else\n    if my‭_variable > 15:\n        ‭print(\"Greater than 15\")\n    else:\n        prin‭t(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_v‭ar = m‭y_variable + my_variabl‭e_two\n    ‭print(f\"Result: {te‭mp_var}\")\n\nif __na‭me__ == \"__main__\":\n    mai‭n()\n",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recur\bsive(\bn):\n    if \bn == 0:\n        return 1\n    else:\n        return \bn * facto\brial_recursive(\bn - 1)\n\n# For style 17: nested if\ndef check\b_nested(\ba, \bb):\n    if \ba > 0 and \bb > 0:\n        \bprint(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef \bprint_day(da\by):\n    if da\by == 1:\n        prin\bt(\"Monday\")\n    elif da\by == 2:\n        p\brint(\"Tuesday\")\n    else:\n        pr\bint(\"Other day\")\n\ndef \bmain():\n    # For style 0: identifier name\n    my_varia\bble = 10\n    my_variable_tw\bo = 20\n\n    # For style 2: augmented assignment\n    my_\bvariable = my_variabl\be + 5\n    my_variable\b_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for \bi in \brange(5):\n        my_\bvariable += 1\n\n    \bj = 0\n    while \bj < 3:\n        my_va\briable_two -= 1\n        \bj += 1\n\n    # For style 19: ternary\n    max_v\bal = my_varia\bble if my\b_variable > my_va\briable_two else my_v\bariable_two\n\n    # For style 14: if exclamation\n    if not (my_\bvariable == my_vari\bable_two):\n        p\brint(\"Not equal\")\n\n    # For style 18: if/else\n    if my_var\biable > 15:\n        \bprint(\"Greater than 15\")\n    else:\n        pri\bnt(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp\b_var = my_\bvariable + my_var\biable_two\n    p\brint(f\"Result: {t\bemp_var}\")\n\nif __name_\b_ == \"__main__\":\n    ma\bin()\n",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode_cs'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(N):\n    if N == 0:\n        return 1\n    else:\n        return N * factorial_recursive(N - 1)\n\n# For style 17: nested if\ndef check_nested(A, B):\n    if A > 0 and B > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(dAy):\n    if dAy == 1:\n        print(\"Monday\")\n    elif dAy == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    myVariable = 10\n    myVariableTwo = 20\n\n    # For style 2: augmented assignment\n    myVariable = myVariable + 5\n    myVariableTwo += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for I in range(5):\n        myVariable += 1\n\n    J = 0\n    while J < 3:\n        myVariableTwo -= 1\n        J += 1\n\n    # For style 19: ternary\n    maxVal = myVariable if myVariable > myVariableTwo else myVariableTwo\n\n    # For style 14: if exclamation\n    if not (myVariable == myVariableTwo):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if myVariable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    tempVar = myVariable + myVariableTwo\n    print(f\"Result: {tempVar}\")\n\nif naMe == \"__main__\":\n    main()\n",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(N):\n    if N == 0:\n        return 1\n    else:\n        return N * factorial_recursive(N - 1)\n\n# For style 17: nested if\ndef check_nested(A, B):\n    if A > 0 and B > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(DAy):\n    if DAy == 1:\n        print(\"Monday\")\n    elif DAy == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    MyVariable = 10\n    MyVariableTwo = 20\n\n    # For style 2: augmented assignment\n    MyVariable = MyVariable + 5\n    MyVariableTwo += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for I in range(5):\n        MyVariable += 1\n\n    J = 0\n    while J < 3:\n        MyVariableTwo -= 1\n        J += 1\n\n    # For style 19: ternary\n    MaxVal = MyVariable if MyVariable > MyVariableTwo else MyVariableTwo\n\n    # For style 14: if exclamation\n    if not (MyVariable == MyVariableTwo):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if MyVariable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    TempVar = MyVariable + MyVariableTwo\n    print(f\"Result: {TempVar}\")\n\nif NaMe == \"__main__\":\n    main()\n",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(_n):\n    if _n == 0:\n        return 1\n    else:\n        return _n * factorial_recursive(_n - 1)\n\n# For style 17: nested if\ndef check_nested(_a, _b):\n    if _a > 0 and _b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(d_ay):\n    if d_ay == 1:\n        print(\"Monday\")\n    elif d_ay == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for _i in range(5):\n        my_variable += 1\n\n    _j = 0\n    while _j < 3:\n        my_variable_two -= 1\n        _j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif na_me == \"__main__\":\n    main()\n",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": false,
        "error": "cannot access local variable 'find_type' where it is not associated with a value",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(_n):\n    if _n == 0:\n        return 1\n    else:\n        return _n * factorial_recursive(_n - 1)\n\n# For style 17: nested if\ndef check_nested(_a, _b):\n    if _a > 0 and _b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(_day):\n    if _day == 1:\n        print(\"Monday\")\n    elif _day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    _my_variable = 10\n    _my_variable_two = 20\n\n    # For style 2: augmented assignment\n    _my_variable = _my_variable + 5\n    _my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for _i in range(5):\n        _my_variable += 1\n\n    _j = 0\n    while _j < 3:\n        _my_variable_two -= 1\n        _j += 1\n\n    # For style 19: ternary\n    _max_val = _my_variable if _my_variable > _my_variable_two else _my_variable_two\n\n    # For style 14: if exclamation\n    if not (_my_variable == _my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if _my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    _temp_var = _my_variable + _my_variable_two\n    print(f\"Result: {_temp_var}\")\n\nif ___name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive($n):\n    if $n == 0:\n        return 1\n    else:\n        return $n * factorial_recursive($n - 1)\n\n# For style 17: nested if\ndef check_nested($a, $b):\n    if $a > 0 and $b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day($day):\n    if $day == 1:\n        print(\"Monday\")\n    elif $day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    $my_variable = 10\n    $my_variable_two = 20\n\n    # For style 2: augmented assignment\n    $my_variable = $my_variable + 5\n    $my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for $i in range(5):\n        $my_variable += 1\n\n    $j = 0\n    while $j < 3:\n        $my_variable_two -= 1\n        $j += 1\n\n    # For style 19: ternary\n    $max_val = $my_variable if $my_variable > $my_variable_two else $my_variable_two\n\n    # For style 14: if exclamation\n    if not ($my_variable == $my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if $my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    $temp_var = $my_variable + $my_variable_two\n    print(f\"Result: {$temp_var}\")\n\nif $__name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": false,
        "error": "cannot access free variable 'check' where it is not associated with a value in enclosing scope",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not !((my_variable!=my_variable_two)):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": false,
        "error": "'python'",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "transformed_code": "# For style 21: recursive/iterative\ndef factorial_recursive(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial_recursive(n - 1)\n\n# For style 17: nested if\ndef check_nested(a, b):\n    if a > 0 and b > 0:\n        print(\"Both positive\")\n\n# For style 16: if/switch (Python has no switch, so this is for if-elif-else)\ndef print_day(day):\n    if day == 1:\n        print(\"Monday\")\n    elif day == 2:\n        print(\"Tuesday\")\n    else:\n        print(\"Other day\")\n\ndef main():\n    # For style 0: identifier name\n    my_variable = 10\n    my_variable_two = 20\n\n    # For style 2: augmented assignment\n    my_variable = my_variable + 5\n    my_variable_two += 5\n\n    # For style 1, 11: brackets (not really applicable), for/while\n    for i in range(5):\n        my_variable += 1\n\n    j = 0\n    while j < 3:\n        my_variable_two -= 1\n        j += 1\n\n    # For style 19: ternary\n    max_val = my_variable if my_variable > my_variable_two else my_variable_two\n\n    # For style 14: if exclamation\n    if not (my_variable == my_variable_two):\n        print(\"Not equal\")\n\n    # For style 18: if/else\n    if my_variable > 15:\n        print(\"Greater than 15\")\n    else:\n        print(\"Not greater than 15\")\n\n    # For style 8: declare position (Python is dynamic, but can simulate with first use)\n    temp_var = my_variable + my_variable_two\n    print(f\"Result: {temp_var}\")\n\nif __name__ == \"__main__\":\n    main()\n",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  },
  {
    "language": "java",
    "test_file": "/home/nfs/u2023-zlb/FABE/IST/test_code/test2.java",
    "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
    "timestamp": "2025-09-15T05:42:06.681385",
    "total_tests": 65,
    "successful_tests": 38,
    "failed_tests": 27,
    "successful_styles": [
      "-1.1",
      "-1.2",
      "0.0",
      "0.1",
      "0.2",
      "0.3",
      "0.4",
      "0.5",
      "0.6",
      "2.1",
      "2.2",
      "3.1",
      "3.2",
      "3.3",
      "3.4",
      "4.1",
      "4.2",
      "4.3",
      "4.4",
      "7.2",
      "8.1",
      "9.1",
      "9.2",
      "10.0",
      "10.1",
      "10.2",
      "10.3",
      "10.4",
      "10.5",
      "10.6",
      "10.7",
      "11.1",
      "11.2",
      "11.4",
      "12.4",
      "14.2",
      "16.2",
      "17.2"
    ],
    "failed_styles": [
      "-3.1",
      "-2.1",
      "-2.2",
      "-2.3",
      "-2.4",
      "-1.3",
      "1.1",
      "1.2",
      "5.1",
      "5.2",
      "6.1",
      "6.2",
      "7.1",
      "8.2",
      "11.3",
      "12.1",
      "12.2",
      "12.3",
      "13.1",
      "13.2",
      "14.1",
      "15.1",
      "15.2",
      "16.1",
      "17.1",
      "18.1",
      "18.2"
    ],
    "detailed_results": {
      "-3.1": {
        "style": "-3.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.1": {
        "style": "-2.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Tes​t {\n\n    // For style 21: recursive/iterative\n    public static int factoria​lRecursive(int ​n) {\n        if (​n == 0) {\n            return 1;\n        }\n        return ​n * factorialRecu​rsive(​n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNest​ed(int ​a, int ​b) {\n        if (​a > 0 && ​b > 0) {\n            ​System.​out.printl​n(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printD​ay(int da​y) {\n        switch (d​ay) {\n            case 1:\n                Sys​tem.​out.p​rintln(\"Monday\");\n                break;\n            case 2:\n                S​ystem.o​ut.pri​ntln(\"Tuesday\");\n                break;\n            default:\n                Sys​tem.ou​t.print​ln(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ma​in(String[] a​rgs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ​a;\n        ​a = 5;\n        int ​b = 10;\n        int ​myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ​a = ​a + 1;\n        ​b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ​i = 0; ​i < 5; ​i++) {\n            ​a++; // For style 4: for update\n        }\n\n        int ​j = 0;\n        while (​j < 3) {\n            ​b--;\n            ​j++;\n        }\n\n        // For style 19: ternary\n        int maxV​al = (​a > ​b) ? ​a : ​b;\n\n        // For style 14: if exclamation\n        if (!(​a == ​b)) {\n            ​System.o​ut.p​rintln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ​k = 0; ​k < 10; ​k++) {\n            if (​k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int t​empVar = ​a + ​b;\n        ​System.ou​t.pri​ntln(\"Result: \" + ​tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.2": {
        "style": "-2.2",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Tes‌t {\n\n    // For style 21: recursive/iterative\n    public static int fa‌ctorialRecursive(int ‌n) {\n        if (‌n == 0) {\n            return 1;\n        }\n        return ‌n * factoria‌lRecursive(‌n - 1);\n    }\n\n    // For style 17: nested if\n    public static void chec‌kNested(int ‌a, int ‌b) {\n        if (‌a > 0 && ‌b > 0) {\n            Sys‌tem.‌out.pri‌ntln(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void ‌printDay(int da‌y) {\n        switch (d‌ay) {\n            case 1:\n                Sy‌stem.o‌ut.‌println(\"Monday\");\n                break;\n            case 2:\n                Sy‌stem.‌out.pri‌ntln(\"Tuesday\");\n                break;\n            default:\n                ‌System.ou‌t.printl‌n(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ‌main(String[] ar‌gs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ‌a;\n        ‌a = 5;\n        int ‌b = 10;\n        int myVa‌r = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ‌a = ‌a + 1;\n        ‌b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ‌i = 0; ‌i < 5; ‌i++) {\n            ‌a++; // For style 4: for update\n        }\n\n        int ‌j = 0;\n        while (‌j < 3) {\n            ‌b--;\n            ‌j++;\n        }\n\n        // For style 19: ternary\n        int ‌maxVal = (‌a > ‌b) ? ‌a : ‌b;\n\n        // For style 14: if exclamation\n        if (!(‌a == ‌b)) {\n            Syst‌em.o‌ut.pri‌ntln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ‌k = 0; ‌k < 10; ‌k++) {\n            if (‌k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int temp‌Var = ‌a + ‌b;\n        ‌System.ou‌t.p‌rintln(\"Result: \" + ‌tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.3": {
        "style": "-2.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class T‭est {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecur‭sive(int ‭n) {\n        if (‭n == 0) {\n            return 1;\n        }\n        return ‭n * fa‭ctorialRecursive(‭n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNe‭sted(int ‭a, int ‭b) {\n        if (‭a > 0 && ‭b > 0) {\n            S‭ystem.‭out.prin‭tln(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDa‭y(int da‭y) {\n        switch (d‭ay) {\n            case 1:\n                S‭ystem.ou‭t.print‭ln(\"Monday\");\n                break;\n            case 2:\n                S‭ystem.o‭ut.printl‭n(\"Tuesday\");\n                break;\n            default:\n                Sy‭stem.o‭ut.print‭ln(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ma‭in(String[] ar‭gs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int ‭a;\n        ‭a = 5;\n        int ‭b = 10;\n        int m‭yVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ‭a = ‭a + 1;\n        ‭b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int ‭i = 0; ‭i < 5; ‭i++) {\n            ‭a++; // For style 4: for update\n        }\n\n        int ‭j = 0;\n        while (‭j < 3) {\n            ‭b--;\n            ‭j++;\n        }\n\n        // For style 19: ternary\n        int ma‭xVal = (‭a > ‭b) ? ‭a : ‭b;\n\n        // For style 14: if exclamation\n        if (!(‭a == ‭b)) {\n            S‭ystem.‭out.print‭ln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int ‭k = 0; ‭k < 10; ‭k++) {\n            if (‭k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int temp‭Var = ‭a + ‭b;\n        Sys‭tem.ou‭t.p‭rintln(\"Result: \" + te‭mpVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-2.4": {
        "style": "-2.4",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class T\best {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursi\bve(int \bn) {\n        if (\bn == 0) {\n            return 1;\n        }\n        return \bn * f\bactorialRecursive(\bn - 1);\n    }\n\n    // For style 17: nested if\n    public static void check\bNested(int \ba, int \bb) {\n        if (\ba > 0 && \bb > 0) {\n            Syst\bem.\bout.printl\bn(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void pri\bntDay(int d\bay) {\n        switch (d\bay) {\n            case 1:\n                Syst\bem.o\but.\bprintln(\"Monday\");\n                break;\n            case 2:\n                \bSystem.o\but.print\bln(\"Tuesday\");\n                break;\n            default:\n                S\bystem.o\but.print\bln(\"Other day\");\n                break;\n        }\n    }\n\n    public static void ma\bin(String[] \bargs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int \ba;\n        \ba = 5;\n        int \bb = 10;\n        int my\bVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        \ba = \ba + 1;\n        \bb += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int \bi = 0; \bi < 5; \bi++) {\n            \ba++; // For style 4: for update\n        }\n\n        int \bj = 0;\n        while (\bj < 3) {\n            \bb--;\n            \bj++;\n        }\n\n        // For style 19: ternary\n        int \bmaxVal = (\ba > \bb) ? \ba : \bb;\n\n        // For style 14: if exclamation\n        if (!(\ba == \bb)) {\n            Sy\bstem.ou\bt.print\bln(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int \bk = 0; \bk < 10; \bk++) {\n            if (\bk == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int t\bempVar = \ba + \bb;\n        S\bystem.o\but.\bprintln(\"Result: \" + te\bmpVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-1.1": {
        "style": "-1.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (1 == -1) { System.out.println(\"INFO Test message:aaaaa\");}\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (1 == -1) { System.out.println(\"INFO Test message:aaaaa\");}\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        if (1 == -1) { System.out.println(\"INFO Test message:aaaaa\");}\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        if (1 == -1) { System.out.println(\"INFO Test message:aaaaa\");}\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-1.2": {
        "style": "-1.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        System.out.println(233);\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        System.out.println(233);\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        System.out.println(233);\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(233);\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "-1.3": {
        "style": "-1.3",
        "success": false,
        "error": "'deadcode_cs'",
        "style_desc": "未知风格"
      },
      "0.0": {
        "style": "0.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "0.1": {
        "style": "0.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int N) {\n        if (N == 0) {\n            return 1;\n        }\n        return N * factorialRecursive(N - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int A, int B) {\n        if (A > 0 && B > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int dAy) {\n        switch (dAy) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] arGs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int A;\n        A = 5;\n        int B = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        A = A + 1;\n        B += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            A++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            B--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (A > B) ? A : B;\n\n        // For style 14: if exclamation\n        if (!(A == B)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = A + B;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "aaBb"
        ]
      },
      "0.2": {
        "style": "0.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int N) {\n        if (N == 0) {\n            return 1;\n        }\n        return N * factorialRecursive(N - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int A, int B) {\n        if (A > 0 && B > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int DAy) {\n        switch (DAy) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] ArGs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int A;\n        A = 5;\n        int B = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        A = A + 1;\n        B += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            A++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            B--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (A > B) ? A : B;\n\n        // For style 14: if exclamation\n        if (!(A == B)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = A + B;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "AaBb"
        ]
      },
      "0.3": {
        "style": "0.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int _n) {\n        if (_n == 0) {\n            return 1;\n        }\n        return _n * factorialRecursive(_n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int _a, int _b) {\n        if (_a > 0 && _b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int d_ay) {\n        switch (d_ay) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] ar_gs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int _a;\n        _a = 5;\n        int _b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        _a = _a + 1;\n        _b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            _a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            _b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (_a > _b) ? _a : _b;\n\n        // For style 14: if exclamation\n        if (!(_a == _b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = _a + _b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "aa_bb"
        ]
      },
      "0.4": {
        "style": "0.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int intN) {\n        if (intN == 0) {\n            return 1;\n        }\n        return intN * factorialRecursive(intN - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int intA, int intB) {\n        if (intA > 0 && intB > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int intDay) {\n        switch (intDay) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] StringArgs) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int intA;\n        intA = 5;\n        int intB = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        intA = intA + 1;\n        intB += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            intA++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            intB--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (intA > intB) ? intA : intB;\n\n        // For style 14: if exclamation\n        if (!(intA == intB)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = intA + intB;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "typeAabb"
        ]
      },
      "0.5": {
        "style": "0.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int _n) {\n        if (_n == 0) {\n            return 1;\n        }\n        return _n * factorialRecursive(_n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int _a, int _b) {\n        if (_a > 0 && _b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int _day) {\n        switch (_day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] _args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int _a;\n        _a = 5;\n        int _b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        _a = _a + 1;\n        _b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            _a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            _b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (_a > _b) ? _a : _b;\n\n        // For style 14: if exclamation\n        if (!(_a == _b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = _a + _b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "_aabb"
        ]
      },
      "0.6": {
        "style": "0.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int $n) {\n        if ($n == 0) {\n            return 1;\n        }\n        return $n * factorialRecursive($n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int $a, int $b) {\n        if ($a > 0 && $b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int $day) {\n        switch ($day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] $args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int $a;\n        $a = 5;\n        int $b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        $a = $a + 1;\n        $b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            $a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            $b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = ($a > $b) ? $a : $b;\n\n        // For style 14: if exclamation\n        if (!($a == $b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = $a + $b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "aabb",
          "$aabb"
        ]
      },
      "1.1": {
        "style": "1.1",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0)  return 1;\n\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0)  System.out.println(\"Both positive\");\n\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++)  a++,  // For style 4: for update        ;\n\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b))  System.out.println(\"Not equal\");\n\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++)  if (k\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "if/for/while {...}",
          "if/for/while ..."
        ]
      },
      "1.2": {
        "style": "1.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": [
          "if/for/while ...",
          "if/for/while {...}"
        ]
      },
      "2.1": {
        "style": "2.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b = b + 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "2.2": {
        "style": "2.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a += 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.1": {
        "style": "3.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n <= 0 && 0 <= n) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (0 < a && 0 < b) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (b < a) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a <= b && b <= a)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k <= 3 && 3 <= k) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.2": {
        "style": "3.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n >= 0 && 0 >= n) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; 5 > i; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (3 > j) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a >= b && b >= a)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; 10 > k; k++) {\n            if (k >= 3 && 3 >= k) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.3": {
        "style": "3.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (!(0 > a || a == 0) && !(0 > b || b == 0)) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; !(5 < i || i == 5); i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (!(3 < j || j == 3)) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (!(b > a || a == b)) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; !(10 < k || k == 10); k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "3.4": {
        "style": "3.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (!(n != 0)) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a < 0 && a != 0 && b < 0 && b != 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5 && i != 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3 && j != 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a < b && a != b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(!(a != b))) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10 && k != 10; k++) {\n            if (!(k != 3)) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.1": {
        "style": "4.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        ++a;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; ++i) {\n            ++a; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            --b;\n            ++j;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; ++k) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.2": {
        "style": "4.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a++;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.3": {
        "style": "4.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a += 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i += 1) {\n            a += 1; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b -= 1;\n            j += 1;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k += 1) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "4.4": {
        "style": "4.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i = i + 1) {\n            a = a + 1; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b = b - 1;\n            j = j + 1;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k = k + 1) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "5.1": {
        "style": "5.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "5.2": {
        "style": "5.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "6.1": {
        "style": "6.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "6.2": {
        "style": "6.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "7.1": {
        "style": "7.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "7.2": {
        "style": "7.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a, b = 10, myVar = 20, j = 0, maxVal = (a > b) ? a : b, tempVar = a + b;\n        a = 5;\n        \n         // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        \n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        \n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        \n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "8.1": {
        "style": "8.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "8.2": {
        "style": "8.2",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "9.1": {
        "style": "9.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b;\n        b = 10;\n        int myVar;\n        myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j;\n        j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal;\n        maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar;\n        tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "9.2": {
        "style": "9.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a = 5;\n        \n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.0": {
        "style": "10.0",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n        for(int j = 0; j < 3; ) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.1": {
        "style": "10.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        for (; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n        int j = 0;\n        for(; j < 3; ) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        for (; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.2": {
        "style": "10.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; ; i++) {\n            if (i < 5)\n                break;\n            a++; // For style 4: for update\n        }\n        for(int j = 0; ; ) {\n            if (j < 3)\n                break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; ; k++) {\n            if (k < 10)\n                break;\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.3": {
        "style": "10.3",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; ) {\n            a++; // For style 4: for update\n             i++;\n        }\n        for(int j = 0; j < 3; ) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; ) {\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.4": {
        "style": "10.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; ; ) {\n            if (i < 5)\n                break;\n            a++; // For style 4: for update\n             i++;\n        }\n        for(int j = 0; ; ) {\n            if (j < 3)\n                break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; ; ) {\n            if (k < 10)\n                break;\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.5": {
        "style": "10.5",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        for (; i < 5; ) {\n            a++; // For style 4: for update\n             i++;\n        }\n        int j = 0;\n        for(; j < 3; ) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        for (; k < 10; ) {\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.6": {
        "style": "10.6",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        for (; ; i++) {\n            if (i < 5)\n                break;\n            a++; // For style 4: for update\n        }\n        int j = 0;\n        for(; ; ) {\n            if (j < 3)\n                break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        for (; ; k++) {\n            if (k < 10)\n                break;\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "10.7": {
        "style": "10.7",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        for (; ; ) {\n            if (i < 5)\n                break;\n            a++; // For style 4: for update\n             i++;\n        }\n        int j = 0;\n        for(; ; ) {\n            if (j < 3)\n                break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        for (; ; ) {\n            if (k < 10)\n                break;\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "11.1": {
        "style": "11.1",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n        for(int j = 0; j < 3; ) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "11.2": {
        "style": "11.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        while(i < 5) {\n            a++; // For style 4: for update\n             i++;\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        while(k < 10) {\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "11.3": {
        "style": "11.3",
        "success": true,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        do{\n            a++; // For style 4: for update\n             i++;\n        }while(i < 5)\n\n        int j = 0;\n        do {\n            b--;\n            j++;\n        }while(j < 3)\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        do{\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }while(k < 10)\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "11.4": {
        "style": "11.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        while(true) {\n            if(i < 5) break;\n            a++; // For style 4: for update\n             i++;\n        }\n\n        int j = 0;\n        while (true) {\n            if(j>=3) break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        while(true) {\n            if(k < 10) break;\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "12.1": {
        "style": "12.1",
        "success": false,
        "error": "'finite_for'",
        "style_desc": "未知风格"
      },
      "12.2": {
        "style": "12.2",
        "success": false,
        "error": "'infinite_for'",
        "style_desc": "未知风格"
      },
      "12.3": {
        "style": "12.3",
        "success": false,
        "error": "'finite_while'",
        "style_desc": "未知风格"
      },
      "12.4": {
        "style": "12.4",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        int i = 0;\n        while(true) {\n            if(i < 5) break;\n            a++; // For style 4: for update\n             i++;\n        }\n\n        int j = 0;\n        while (true) {\n            if(j>=3) break;\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        int k = 0;\n        while(true) {\n            if(k < 10) break;\n            if (k == 3) {\n                break;\n            }\n            k++;\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "13.1": {
        "style": "13.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "13.2": {
        "style": "13.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.1": {
        "style": "14.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "14.2": {
        "style": "14.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (!(n!=0)) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (!(a<=0||b<=0)) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (!(k!=3)) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "15.1": {
        "style": "15.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "15.2": {
        "style": "15.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      },
      "16.1": {
        "style": "16.1",
        "success": false,
        "syntax_valid": false,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "16.2": {
        "style": "16.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        \n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "17.1": {
        "style": "17.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "17.2": {
        "style": "17.2",
        "success": true,
        "syntax_valid": true,
        "original_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if (a > 0 && b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "transformed_code": "public class Test {\n\n    // For style 21: recursive/iterative\n    public static int factorialRecursive(int n) {\n        if (n == 0) {\n            return 1;\n        }\n        return n * factorialRecursive(n - 1);\n    }\n\n    // For style 17: nested if\n    public static void checkNested(int a, int b) {\n        if(a > 0) if(b > 0) {\n            System.out.println(\"Both positive\");\n        }\n    }\n\n    // For style 16: if/switch\n    public static void printDay(int day) {\n        switch (day) {\n            case 1:\n                System.out.println(\"Monday\");\n                break;\n            case 2:\n                System.out.println(\"Tuesday\");\n                break;\n            default:\n                System.out.println(\"Other day\");\n                break;\n        }\n    }\n\n    public static void main(String[] args) {\n        // For style 7, 9: declaration split/merge, assign split/merge\n        int a;\n        a = 5;\n        int b = 10;\n        int myVar = 20; // For style 0: identifier name\n\n        // For style 2: augmented assignment\n        a = a + 1;\n        b += 5;\n\n        // For style 1, 11, 12: brackets, for/while, infinite loop\n        for (int i = 0; i < 5; i++) {\n            a++; // For style 4: for update\n        }\n\n        int j = 0;\n        while (j < 3) {\n            b--;\n            j++;\n        }\n\n        // For style 19: ternary\n        int maxVal = (a > b) ? a : b;\n\n        // For style 14: if exclamation\n        if (!(a == b)) {\n            System.out.println(\"Not equal\");\n        }\n\n        // For style 13: break/goto (Java has no goto)\n        for (int k = 0; k < 10; k++) {\n            if (k == 3) {\n                break;\n            }\n        }\n\n        // For style 8: declare position\n        int tempVar = a + b;\n        System.out.println(\"Result: \" + tempVar);\n    }\n}\n",
        "style_desc": "未知风格"
      },
      "18.1": {
        "style": "18.1",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 0)",
        "style_desc": "未知风格"
      },
      "18.2": {
        "style": "18.2",
        "success": false,
        "error": "not enough values to unpack (expected 3, got 2)",
        "style_desc": "未知风格"
      }
    }
  }
]